import {
  require_prop_types
} from "./chunk-CXZL4EUU.js";
import {
  require_react_dom
} from "./chunk-QMINRHT5.js";
import {
  require_react
} from "./chunk-QV6VW2LK.js";
import {
  __commonJS,
  __toESM
} from "./chunk-HM4MQYWN.js";

// node_modules/load-styles/index.js
var require_load_styles = __commonJS({
  "node_modules/load-styles/index.js"(exports, module) {
    module.exports = loadStyles;
    function loadStyles(css, doc) {
      if (!doc)
        doc = document;
      var head = doc.head || doc.getElementsByTagName("head")[0];
      if (!head) {
        head = doc.createElement("head");
        var body = doc.body || doc.getElementsByTagName("body")[0];
        if (body) {
          body.parentNode.insertBefore(head, body);
        } else {
          doc.documentElement.appendChild(head);
        }
      }
      var style = doc.createElement("style");
      style.type = "text/css";
      if (style.styleSheet) {
        style.styleSheet.cssText = css;
      } else {
        style.appendChild(doc.createTextNode(css));
      }
      head.appendChild(style);
      return style;
    }
  }
});

// node_modules/react-easy-print/lib/es/PrintProvider.js
var import_react = __toESM(require_react());
var import_react_dom = __toESM(require_react_dom());
var import_prop_types = __toESM(require_prop_types());

// node_modules/react-easy-print/lib/es/common.js
function _toConsumableArray(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  } else {
    return Array.from(arr);
  }
}
var spliced = function spliced2(array, i) {
  var array_ = [].concat(_toConsumableArray(array));
  array_.splice(i, 1);
  return array_;
};
var debug = function debug2() {
  var _console;
  if (!window.localStorage["react-easy-print-debug"])
    return;
  (_console = console).log.apply(_console, arguments);
};

// node_modules/react-easy-print/lib/es/PrintProvider.js
var _createClass = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call && (typeof call === "object" || typeof call === "function") ? call : self;
}
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var s = { printRender: "easy-print-PrintProvider-printRender-S70b", hiddenAll: "easy-print-PrintProvider-hiddenAll-1V_W", wrap: "easy-print-PrintProvider-wrap-21G8", _loose: "easy-print-PrintProvider-_loose-2eYz", _invert: "easy-print-PrintProvider-_invert-1m-C" };
require_load_styles()("/*  imported from PrintProvider.css  */\n\n@media print {\n  .easy-print-PrintProvider-printRender-S70b {\n    width: 100%;\n    background-color: #fff;\n    z-index: 10000000;\n    height: 100vh;\n    position: absolute;\n    top: 0;\n    left: 0\n  }\n  .easy-print-PrintProvider-hiddenAll-1V_W {\n    visibility: hidden ;\n  }\n  .easy-print-PrintProvider-hiddenAll-1V_W .react-easy-print-print {\n    visibility: hidden;\n  }\n  .easy-print-PrintProvider-wrap-21G8.easy-print-PrintProvider-_loose-2eYz:not(.easy-print-PrintProvider-_invert-1m-C) {\n    visibility: hidden;\n  }\n}\n");
var propTypes = { loose: import_prop_types.default.bool, children: import_prop_types.default.node.isRequired, invert: import_prop_types.default.bool };
var childContextTypes = { printProvider: import_prop_types.default.shape({ regPrintable: import_prop_types.default.func.isRequired, unregPrintable: import_prop_types.default.func.isRequired, isPrint: import_prop_types.default.bool.isRequired }).isRequired };
var PrintProvider = function(_React$PureComponent) {
  _inherits(PrintProvider2, _React$PureComponent);
  function PrintProvider2(props) {
    _classCallCheck(this, PrintProvider2);
    var _this = _possibleConstructorReturn(this, (PrintProvider2.__proto__ || Object.getPrototypeOf(PrintProvider2)).call(this, props));
    _this.state = { isInPrintPreview: false, printableNodes: [] };
    _this.printableRegistry = {};
    window.matchMedia("print").onchange = function() {
      debug("toggle print mode", window.matchMedia("print").matches);
      _this.setState({ isInPrintPreview: window.matchMedia("print").matches });
    };
    _this.hasSingle = false;
    return _this;
  }
  _createClass(PrintProvider2, [{
    key: "getChildContext",
    value: function getChildContext() {
      return { printProvider: { isPrint: window.matchMedia("print").matches, regPrintable: this.regPrintable.bind(this), unregPrintable: this.unregPrintable.bind(this) } };
    }
    // hideAll - is being used to cover all of React Portals, popups and modals and etc.
  }, { key: "hideAll", value: function hideAll() {
    document.body.classList.add(s.hiddenAll);
    this.hasSingle = true;
  } }, { key: "unhideAll", value: function unhideAll() {
    document.body.classList.remove(s.hiddenAll);
    this.hasSingle = false;
  } }, { key: "regPrintable", value: function regPrintable(key, node) {
    var _this2 = this;
    var loose = this.props.loose || this.props.invert;
    var isSingle = node.props.single || node.props.main;
    var hasSingle = this.hasSingle;
    debug("reg printable", key, node);
    if (this.printableRegistry[key] !== void 0 || loose)
      return;
    setTimeout(function() {
      return _this2.setState({ printableNodes: _this2.state.printableNodes.concat(node) });
    }, 0);
    this.printableRegistry[key] = this.state.printableNodes.length;
    if (isSingle && !hasSingle) {
      this.hideAll();
    } else if (isSingle) {
      console.warn(new Error("react-easy-print warning \n	 you're using more than one `single` Print component"));
    }
  } }, { key: "unregPrintable", value: function unregPrintable(key, isSingle) {
    var loose = this.props.loose || this.props.invert;
    if (this.printableRegistry[key] === void 0 || this.state.isInPrintPreview || loose)
      return;
    this.setState({ printableNodes: spliced(this.state.printableNodes, this.printableRegistry[key]) });
    this.printableRegistry = Object.assign({}, this.printableRegistry, _defineProperty({}, key, void 0));
    if (isSingle) {
      this.unhideAll();
    }
  } }, { key: "createRender", value: function createRender(children) {
    var el = document.createElement("div");
    el.id = "render";
    document.body.appendChild(el);
    import_react_dom.default.render(import_react.default.createElement("div", { className: s.printRender }, children), el);
  } }, { key: "deleteRender", value: function deleteRender() {
    var el = document.getElementById("render");
    el && document.body.removeChild(el);
  } }, { key: "render", value: function render() {
    var _this3 = this;
    var _state = this.state, isInPrintPreview = _state.isInPrintPreview, printableNodes = _state.printableNodes;
    var loose = this.props.loose || this.props.invert;
    var hasSingle = this.hasSingle;
    if (isInPrintPreview && printableNodes.length && !loose && !hasSingle) {
      debug("render printable only", printableNodes);
      var children = import_react.default.Children.map(printableNodes, function(child, key) {
        return import_react.default.cloneElement(child, { key });
      });
      this.createRender(import_react.default.createElement("div", null, children));
    }
    setTimeout(function() {
      return _this3.deleteRender();
    }, 0);
    debug("render everything", isInPrintPreview, printableNodes.length, !loose);
    var loose_ = loose ? s.loose : "";
    var invert_ = this.props.invert ? s.invert : "";
    return import_react.default.createElement("div", { className: s.wrap + " " + loose_ + " " + invert_ + " " }, this.props.children);
  } }]);
  return PrintProvider2;
}(import_react.default.PureComponent);
var PrintProvider_default = PrintProvider;
PrintProvider.childContextTypes = childContextTypes;

// node_modules/react-easy-print/lib/es/NoPrint.js
var import_react2 = __toESM(require_react());
var import_prop_types2 = __toESM(require_prop_types());
var _createClass2 = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck2(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn2(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call && (typeof call === "object" || typeof call === "function") ? call : self;
}
function _inherits2(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var s2 = { root: "easy-print-NoPrint-root-1A10", _force: "easy-print-NoPrint-_force-1-C_" };
require_load_styles()("/*  imported from NoPrint.css  */\n\n@media print {\n  .easy-print-NoPrint-root-1A10 {\n    visibility: hidden;\n  }\n  .easy-print-NoPrint-_force-1-C_ {\n    display: none;\n  }\n}\n");
var propTypes2 = { force: import_prop_types2.default.bool, children: import_prop_types2.default.node.isRequired };
var NoPrint = function(_React$PureComponent) {
  _inherits2(NoPrint2, _React$PureComponent);
  function NoPrint2() {
    _classCallCheck2(this, NoPrint2);
    return _possibleConstructorReturn2(this, (NoPrint2.__proto__ || Object.getPrototypeOf(NoPrint2)).apply(this, arguments));
  }
  _createClass2(NoPrint2, [{ key: "render", value: function render() {
    var _props = this.props, children = _props.children, force = _props.force;
    var force_ = force ? s2._force : "";
    return import_react2.default.createElement("div", { className: s2.root + " " + force_ }, children);
  } }]);
  return NoPrint2;
}(import_react2.default.PureComponent);
var NoPrint_default = NoPrint;

// node_modules/react-easy-print/lib/es/Print.js
var import_react3 = __toESM(require_react());
var import_prop_types3 = __toESM(require_prop_types());
var _createClass3 = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _classCallCheck3(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn3(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call && (typeof call === "object" || typeof call === "function") ? call : self;
}
function _inherits3(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var s3 = { _exclusive: "easy-print-Print-_exclusive-3Eag", root: "easy-print-Print-root-2BcA", _main: "easy-print-Print-_main-LssU" };
require_load_styles()("/*  imported from Print.css  */\n\n.easy-print-Print-_exclusive-3Eag {\n  display: none;\n}\n\n@media print {\n  .easy-print-Print-root-2BcA {\n    visibility: visible; /* visible element even nested in the hidden one */\n  }\n  .easy-print-Print-root-2BcA.easy-print-Print-_main-LssU {\n    visibility: visible;\n  }\n  .easy-print-Print-_exclusive-3Eag {\n    display: block;\n  }\n}\n");
var propTypes3 = { name: import_prop_types3.default.string, children: import_prop_types3.default.node.isRequired, main: import_prop_types3.default.bool, single: import_prop_types3.default.bool, exclusive: import_prop_types3.default.bool, printOnly: import_prop_types3.default.bool };
var contextTypes = PrintProvider_default.childContextTypes;
var Print = function(_React$Component) {
  _inherits3(Print2, _React$Component);
  function Print2(props) {
    _classCallCheck3(this, Print2);
    var _this = _possibleConstructorReturn3(this, (Print2.__proto__ || Object.getPrototypeOf(Print2)).call(this, props));
    _this.state = { printOffsetLeft: 0, printOffsetTop: 0 };
    return _this;
  }
  _createClass3(Print2, [{ key: "componentDidMount", value: function componentDidMount() {
    var _this2 = this;
    if (this.props.name) {
      debug("init printable", this.props.name);
      var isSingle = this.props.main || this.props.single;
      this.context.printProvider && this.context.printProvider.regPrintable(this.props.name, import_react3.default.createElement(Print2, this.props), isSingle);
    }
    if (this.props.main || this.props.single) {
      window.matchMedia("print").onchange = function() {
        var isPrint = window.matchMedia("print").matches;
        if (isPrint) {
          var bodyRect = document.body.getBoundingClientRect();
          var elem = _this2.printElement;
          var elemRect = elem && elem.getBoundingClientRect();
          var printOffsetLeft = elemRect && elemRect.left - bodyRect.left;
          var printOffsetTop = elemRect && elemRect.top - bodyRect.top;
          _this2.setState({ printOffsetTop, printOffsetLeft });
        } else {
          _this2.setState({ printOffsetTop: 0, printOffsetLeft: 0 });
        }
      };
    }
  } }, { key: "componentWillUnmount", value: function componentWillUnmount() {
    if (this.props.name) {
      debug("remove printable", this.props.name);
      var isSingle = this.props.main || this.props.single;
      this.context.printProvider && this.context.printProvider.unregPrintable(this.props.name, isSingle);
    }
    if (this.props.main || this.props.single) {
      window.matchMedia("print").onchange = null;
    }
  } }, { key: "render", value: function render() {
    var _this3 = this;
    var _props = this.props, children = _props.children, main = _props.main, single = _props.single, exclusive = _props.exclusive, printOnly = _props.printOnly;
    var _state = this.state, printOffsetLeft = _state.printOffsetLeft, printOffsetTop = _state.printOffsetTop;
    var main_ = main || single ? s3._main : "";
    var excl_ = exclusive || printOnly ? s3._exclusive : "";
    var isPrint = window.matchMedia("print").matches;
    var offset_ = (printOffsetTop || printOffsetLeft) && main_ && isPrint ? { marginTop: -printOffsetTop, marginLeft: -printOffsetLeft } : {};
    var globalClassName = "react-easy-print-print";
    var className = globalClassName + " " + s3.root + " " + main_ + " " + excl_;
    return import_react3.default.createElement("div", { ref: function ref(el) {
      return _this3.printElement = el;
    }, style: offset_, className }, children);
  } }]);
  return Print2;
}(import_react3.default.Component);
var Print_default = Print;
Print.contextTypes = contextTypes;
export {
  NoPrint_default as NoPrint,
  Print_default as Print,
  PrintProvider_default as PrintProvider,
  PrintProvider_default as default
};
//# sourceMappingURL=react-easy-print.js.map
